/*
Copyright 2025 The KCP Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by cluster-lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/kcp-dev/logicalcluster/v3"

	admissionregistrationv1alpha1 "k8s.io/api/admissionregistration/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	listersadmissionregistrationv1alpha1 "k8s.io/client-go/listers/admissionregistration/v1alpha1"
	"k8s.io/client-go/tools/cache"

	kcplisters "github.com/kcp-dev/client-go/third_party/k8s.io/client-go/listers"
)

// ValidatingAdmissionPolicyClusterLister helps list ValidatingAdmissionPolicies across all workspaces,
// or scope down to a ValidatingAdmissionPolicyLister for one workspace.
// All objects returned here must be treated as read-only.
type ValidatingAdmissionPolicyClusterLister interface {
	// List lists all ValidatingAdmissionPolicies in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*admissionregistrationv1alpha1.ValidatingAdmissionPolicy, err error)
	// Cluster returns a lister that can list and get ValidatingAdmissionPolicies in one workspace.
	Cluster(clusterName logicalcluster.Name) listersadmissionregistrationv1alpha1.ValidatingAdmissionPolicyLister
	ValidatingAdmissionPolicyClusterListerExpansion
}

// validatingAdmissionPolicyClusterLister implements the ValidatingAdmissionPolicyClusterLister interface.
type validatingAdmissionPolicyClusterLister struct {
	kcplisters.ResourceClusterIndexer[*admissionregistrationv1alpha1.ValidatingAdmissionPolicy]
}

var _ ValidatingAdmissionPolicyClusterLister = new(validatingAdmissionPolicyClusterLister)

// NewValidatingAdmissionPolicyClusterLister returns a new ValidatingAdmissionPolicyClusterLister.
// We assume that the indexer:
// - is fed by a cross-workspace LIST+WATCH
// - uses kcpcache.MetaClusterNamespaceKeyFunc as the key function
// - has the kcpcache.ClusterIndex as an index
func NewValidatingAdmissionPolicyClusterLister(indexer cache.Indexer) ValidatingAdmissionPolicyClusterLister {
	return &validatingAdmissionPolicyClusterLister{
		kcplisters.NewCluster[*admissionregistrationv1alpha1.ValidatingAdmissionPolicy](indexer, admissionregistrationv1alpha1.Resource("validatingadmissionpolicy")),
	}
}

// Cluster scopes the lister to one workspace, allowing users to list and get ValidatingAdmissionPolicies.
func (l *validatingAdmissionPolicyClusterLister) Cluster(clusterName logicalcluster.Name) listersadmissionregistrationv1alpha1.ValidatingAdmissionPolicyLister {
	return &validatingAdmissionPolicyLister{
		l.ResourceClusterIndexer.WithCluster(clusterName),
	}
}

// validatingAdmissionPolicyLister can list all ValidatingAdmissionPolicies inside a workspace
// or scope down to a listersadmissionregistrationv1alpha1.ValidatingAdmissionPolicyNamespaceLister for one namespace.
type validatingAdmissionPolicyLister struct {
	kcplisters.ResourceIndexer[*admissionregistrationv1alpha1.ValidatingAdmissionPolicy]
}

var _ listersadmissionregistrationv1alpha1.ValidatingAdmissionPolicyLister = new(validatingAdmissionPolicyLister)

// NewValidatingAdmissionPolicyLister returns a new ValidatingAdmissionPolicyLister.
// We assume that the indexer:
// - is fed by a cross-workspace LIST+WATCH
// - uses kcpcache.MetaClusterNamespaceKeyFunc as the key function
// - has the kcpcache.ClusterIndex as an index
func NewValidatingAdmissionPolicyLister(indexer cache.Indexer) listersadmissionregistrationv1alpha1.ValidatingAdmissionPolicyLister {
	return &validatingAdmissionPolicyLister{
		kcplisters.New[*admissionregistrationv1alpha1.ValidatingAdmissionPolicy](indexer, admissionregistrationv1alpha1.Resource("validatingadmissionpolicy")),
	}
}

// validatingAdmissionPolicyScopedLister can list all ValidatingAdmissionPolicies inside a workspace
// or scope down to a listersadmissionregistrationv1alpha1.ValidatingAdmissionPolicyNamespaceLister.
type validatingAdmissionPolicyScopedLister struct {
	kcplisters.ResourceIndexer[*admissionregistrationv1alpha1.ValidatingAdmissionPolicy]
}
