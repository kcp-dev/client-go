/*
Copyright 2025 The KCP Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by cluster-lister-gen. DO NOT EDIT.

package v1alpha1

import (
	admissionregistrationv1alpha1 "k8s.io/api/admissionregistration/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	listersadmissionregistrationv1alpha1 "k8s.io/client-go/listers/admissionregistration/v1alpha1"
	"k8s.io/client-go/tools/cache"

	kcplisters "github.com/kcp-dev/client-go/third_party/k8s.io/client-go/listers"
	"github.com/kcp-dev/logicalcluster/v3"
)

// MutatingAdmissionPolicyBindingClusterLister helps list MutatingAdmissionPolicyBindings across all workspaces,
// or scope down to a MutatingAdmissionPolicyBindingLister for one workspace.
// All objects returned here must be treated as read-only.
type MutatingAdmissionPolicyBindingClusterLister interface {
	// List lists all MutatingAdmissionPolicyBindings in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*admissionregistrationv1alpha1.MutatingAdmissionPolicyBinding, err error)
	// Cluster returns a lister that can list and get MutatingAdmissionPolicyBindings in one workspace.
	Cluster(clusterName logicalcluster.Name) listersadmissionregistrationv1alpha1.MutatingAdmissionPolicyBindingLister
	MutatingAdmissionPolicyBindingClusterListerExpansion
}

// mutatingAdmissionPolicyBindingClusterLister implements the MutatingAdmissionPolicyBindingClusterLister interface.
type mutatingAdmissionPolicyBindingClusterLister struct {
	kcplisters.ResourceClusterIndexer[*admissionregistrationv1alpha1.MutatingAdmissionPolicyBinding]
}

var _ MutatingAdmissionPolicyBindingClusterLister = new(mutatingAdmissionPolicyBindingClusterLister)

// NewMutatingAdmissionPolicyBindingClusterLister returns a new MutatingAdmissionPolicyBindingClusterLister.
// We assume that the indexer:
// - is fed by a cross-workspace LIST+WATCH
// - uses kcpcache.MetaClusterNamespaceKeyFunc as the key function
// - has the kcpcache.ClusterIndex as an index
func NewMutatingAdmissionPolicyBindingClusterLister(indexer cache.Indexer) MutatingAdmissionPolicyBindingClusterLister {
	return &mutatingAdmissionPolicyBindingClusterLister{
		kcplisters.NewCluster[*admissionregistrationv1alpha1.MutatingAdmissionPolicyBinding](indexer, admissionregistrationv1alpha1.Resource("mutatingadmissionpolicybinding")),
	}
}

// Cluster scopes the lister to one workspace, allowing users to list and get MutatingAdmissionPolicyBindings.
func (l *mutatingAdmissionPolicyBindingClusterLister) Cluster(clusterName logicalcluster.Name) listersadmissionregistrationv1alpha1.MutatingAdmissionPolicyBindingLister {
	return &mutatingAdmissionPolicyBindingLister{
		l.ResourceClusterIndexer.WithCluster(clusterName),
	}
}

// mutatingAdmissionPolicyBindingLister can list all MutatingAdmissionPolicyBindings inside a workspace
// or scope down to a listersadmissionregistrationv1alpha1.MutatingAdmissionPolicyBindingNamespaceLister for one namespace.
type mutatingAdmissionPolicyBindingLister struct {
	kcplisters.ResourceIndexer[*admissionregistrationv1alpha1.MutatingAdmissionPolicyBinding]
}

var _ listersadmissionregistrationv1alpha1.MutatingAdmissionPolicyBindingLister = new(mutatingAdmissionPolicyBindingLister)

// NewMutatingAdmissionPolicyBindingLister returns a new MutatingAdmissionPolicyBindingLister.
// We assume that the indexer:
// - is fed by a cross-workspace LIST+WATCH
// - uses kcpcache.MetaClusterNamespaceKeyFunc as the key function
// - has the kcpcache.ClusterIndex as an index
func NewMutatingAdmissionPolicyBindingLister(indexer cache.Indexer) listersadmissionregistrationv1alpha1.MutatingAdmissionPolicyBindingLister {
	return &mutatingAdmissionPolicyBindingLister{
		kcplisters.New[*admissionregistrationv1alpha1.MutatingAdmissionPolicyBinding](indexer, admissionregistrationv1alpha1.Resource("mutatingadmissionpolicybinding")),
	}
}

// mutatingAdmissionPolicyBindingScopedLister can list all MutatingAdmissionPolicyBindings inside a workspace
// or scope down to a listersadmissionregistrationv1alpha1.MutatingAdmissionPolicyBindingNamespaceLister.
type mutatingAdmissionPolicyBindingScopedLister struct {
	kcplisters.ResourceIndexer[*admissionregistrationv1alpha1.MutatingAdmissionPolicyBinding]
}
