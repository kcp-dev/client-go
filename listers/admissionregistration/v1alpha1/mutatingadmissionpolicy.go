/*
Copyright 2025 The KCP Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by cluster-lister-gen. DO NOT EDIT.

package v1alpha1

import (
	admissionregistrationv1alpha1 "k8s.io/api/admissionregistration/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	listersadmissionregistrationv1alpha1 "k8s.io/client-go/listers/admissionregistration/v1alpha1"
	"k8s.io/client-go/tools/cache"

	kcplisters "github.com/kcp-dev/client-go/third_party/k8s.io/client-go/listers"
	"github.com/kcp-dev/logicalcluster/v3"
)

// MutatingAdmissionPolicyClusterLister helps list MutatingAdmissionPolicies across all workspaces,
// or scope down to a MutatingAdmissionPolicyLister for one workspace.
// All objects returned here must be treated as read-only.
type MutatingAdmissionPolicyClusterLister interface {
	// List lists all MutatingAdmissionPolicies in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*admissionregistrationv1alpha1.MutatingAdmissionPolicy, err error)
	// Cluster returns a lister that can list and get MutatingAdmissionPolicies in one workspace.
	Cluster(clusterName logicalcluster.Name) listersadmissionregistrationv1alpha1.MutatingAdmissionPolicyLister
	MutatingAdmissionPolicyClusterListerExpansion
}

// mutatingAdmissionPolicyClusterLister implements the MutatingAdmissionPolicyClusterLister interface.
type mutatingAdmissionPolicyClusterLister struct {
	kcplisters.ResourceClusterIndexer[*admissionregistrationv1alpha1.MutatingAdmissionPolicy]
}

var _ MutatingAdmissionPolicyClusterLister = new(mutatingAdmissionPolicyClusterLister)

// NewMutatingAdmissionPolicyClusterLister returns a new MutatingAdmissionPolicyClusterLister.
// We assume that the indexer:
// - is fed by a cross-workspace LIST+WATCH
// - uses kcpcache.MetaClusterNamespaceKeyFunc as the key function
// - has the kcpcache.ClusterIndex as an index
func NewMutatingAdmissionPolicyClusterLister(indexer cache.Indexer) MutatingAdmissionPolicyClusterLister {
	return &mutatingAdmissionPolicyClusterLister{
		kcplisters.NewCluster[*admissionregistrationv1alpha1.MutatingAdmissionPolicy](indexer, admissionregistrationv1alpha1.Resource("mutatingadmissionpolicy")),
	}
}

// Cluster scopes the lister to one workspace, allowing users to list and get MutatingAdmissionPolicies.
func (l *mutatingAdmissionPolicyClusterLister) Cluster(clusterName logicalcluster.Name) listersadmissionregistrationv1alpha1.MutatingAdmissionPolicyLister {
	return &mutatingAdmissionPolicyLister{
		l.ResourceClusterIndexer.WithCluster(clusterName),
	}
}

// mutatingAdmissionPolicyLister can list all MutatingAdmissionPolicies inside a workspace
// or scope down to a listersadmissionregistrationv1alpha1.MutatingAdmissionPolicyNamespaceLister for one namespace.
type mutatingAdmissionPolicyLister struct {
	kcplisters.ResourceIndexer[*admissionregistrationv1alpha1.MutatingAdmissionPolicy]
}

var _ listersadmissionregistrationv1alpha1.MutatingAdmissionPolicyLister = new(mutatingAdmissionPolicyLister)

// NewMutatingAdmissionPolicyLister returns a new MutatingAdmissionPolicyLister.
// We assume that the indexer:
// - is fed by a cross-workspace LIST+WATCH
// - uses kcpcache.MetaClusterNamespaceKeyFunc as the key function
// - has the kcpcache.ClusterIndex as an index
func NewMutatingAdmissionPolicyLister(indexer cache.Indexer) listersadmissionregistrationv1alpha1.MutatingAdmissionPolicyLister {
	return &mutatingAdmissionPolicyLister{
		kcplisters.New[*admissionregistrationv1alpha1.MutatingAdmissionPolicy](indexer, admissionregistrationv1alpha1.Resource("mutatingadmissionpolicy")),
	}
}

// mutatingAdmissionPolicyScopedLister can list all MutatingAdmissionPolicies inside a workspace
// or scope down to a listersadmissionregistrationv1alpha1.MutatingAdmissionPolicyNamespaceLister.
type mutatingAdmissionPolicyScopedLister struct {
	kcplisters.ResourceIndexer[*admissionregistrationv1alpha1.MutatingAdmissionPolicy]
}
